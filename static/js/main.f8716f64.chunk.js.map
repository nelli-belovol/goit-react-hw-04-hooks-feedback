{"version":3,"sources":["component/Feedback/Statistics/Statistics.jsx","component/Feedback/FeedbackOptions/FeedbackOptions.jsx","component/Feedback/Section/Section.jsx","component/Feedback/Notification/Notification.jsx","component/Feedback/Feedback.jsx","App.js","index.js","component/Feedback/Statistics/Statistics.module.scss","component/Feedback/FeedbackOptions/FeedbackOptions.module.scss","component/Feedback/Feedback.module.scss"],"names":["Statistics","good","neutral","bad","total","positivePercentage","style","display","flexDirection","className","s","statistics__value","shortid","generate","FeedbackOptions","options","onLeaveFeedback","onClick","Object","keys","map","name","feedback__button","toLowerCase","type","Section","title","children","Notification","message","Feedback","useState","setGood","setNeutral","setBad","countTotalFeedback","feedback","e","target","dataset","prevState","percent","Math","floor","countPositiveFeedbackPercentage","App","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"0SAKaA,EAAa,SAAC,GAMpB,IALLC,EAKI,EALJA,KACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,IACAC,EAEI,EAFJA,MACAC,EACI,EADJA,mBAEA,OACE,gCACE,sBAAKC,MAAO,CAAEC,QAAS,OAAQC,cAAe,UAA9C,UACE,sCACO,sBAAMC,UAAWC,IAAEC,kBAAnB,SAAuCV,MADtCW,IAAQC,YAGhB,yCACU,sBAAMJ,UAAWC,IAAEC,kBAAnB,SAAuCT,MADzCU,IAAQC,YAGhB,qCACM,sBAAMJ,UAAWC,IAAEC,kBAAnB,SAAuCR,MADrCS,IAAQC,eAIlB,uCACQ,sBAAMJ,UAAWC,IAAEC,kBAAnB,SAAuCP,OAE/C,mDAEE,uBAAMK,UAAWC,IAAEC,kBAAnB,UAAuCN,EAAvC,c,gBCzBKS,EAAkB,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBACzC,OACE,qBAAKP,UAAU,UAAUQ,QAASD,EAAlC,SACGE,OAAOC,KAAKJ,GAASK,KAAI,SAAAC,GACxB,OACE,wBACEZ,UAAWC,IAAEY,iBACb,YAAWD,EAAKE,cAEhBC,KAAK,SAJP,SAMGH,GAHIT,IAAQC,kBCVZY,EAAU,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC/B,OACE,qCACE,6BAAKD,IACJC,MCJMC,EAAe,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,QAASF,EAAe,EAAfA,SACtC,OACE,qCACE,6BAAKE,IACJF,M,gBCEQ,SAASG,IACtB,MAAwBC,mBAAS,GAAjC,mBAAO9B,EAAP,KAAa+B,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAO7B,EAAP,KAAgB+B,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAO5B,EAAP,KAAY+B,EAAZ,KAoBA,SAASC,IACP,OAAOlC,EAAOC,EAAUC,EAW1B,OACE,sBAAKM,UAAWC,IAAE0B,SAAlB,UACE,cAAC,EAAD,CAASV,MAAM,wBAAf,SACE,cAAC,EAAD,CACEX,QAAS,CAAEd,OAAMC,UAASC,OAC1Ba,gBAnCa,SAAAqB,GAGnB,OAFmBA,EAAXC,OAEOC,QAAQlB,MACrB,IAAK,OACHW,GAAQ,SAAAQ,GAAS,OAAIA,EAAY,KACjC,MACF,IAAK,UACHP,GAAW,SAAAO,GAAS,OAAIA,EAAY,KACpC,MACF,IAAK,MACHN,GAAO,SAAAM,GAAS,OAAIA,EAAY,WA4BlC,cAAC,EAAD,CAASd,MAAM,aAAf,SAC4B,IAAzBS,IACC,cAAC,EAAD,CACElC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAO+B,IACP9B,mBAxBV,WACE,IAAIoC,EAAU,EACd,OAA6B,IAAzBN,IACgBO,KAAKC,MAAO1C,EAAOkC,IAAwB,KAExDM,EAmBqBG,KAGtB,cAAC,EAAD,CAAcf,QAAQ,2BC5DjB,SAASgB,IACtB,OACE,mCACE,cAACf,EAAD,MCDNgB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,kBAAoB,wC,kBCAtCD,EAAOC,QAAU,CAAC,iBAAmB,4C,kBCArCD,EAAOC,QAAU,CAAC,SAAW,8B","file":"static/js/main.f8716f64.chunk.js","sourcesContent":["import React from 'react';\nimport shortid from 'shortid';\nimport PropTypes from 'prop-types';\nimport s from './Statistics.module.scss';\n\nexport const Statistics = ({\n  good,\n  neutral,\n  bad,\n  total,\n  positivePercentage,\n}) => {\n  return (\n    <div>\n      <div style={{ display: 'flex', flexDirection: 'column' }}>\n        <p key={shortid.generate()}>\n          Good:<span className={s.statistics__value}>{good}</span>\n        </p>\n        <p key={shortid.generate()}>\n          Neutral:<span className={s.statistics__value}>{neutral}</span>\n        </p>\n        <p key={shortid.generate()}>\n          Bad:<span className={s.statistics__value}>{bad}</span>\n        </p>\n      </div>\n      <p>\n        Total:<span className={s.statistics__value}>{total}</span>\n      </p>\n      <p>\n        Positive feedback:\n        <span className={s.statistics__value}>{positivePercentage}%</span>\n      </p>\n    </div>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  total: PropTypes.number,\n  positivePercentage: PropTypes.number,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport shortid from 'shortid';\nimport s from './FeedbackOptions.module.scss';\n\nexport const FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return (\n    <div className=\"buttons\" onClick={onLeaveFeedback}>\n      {Object.keys(options).map(name => {\n        return (\n          <button\n            className={s.feedback__button}\n            data-name={name.toLowerCase()}\n            key={shortid.generate()}\n            type=\"button\"\n          >\n            {name}\n          </button>\n        );\n      })}\n    </div>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  onClick: PropTypes.func,\n  name: PropTypes.string,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <>\n      <h2>{title}</h2>\n      {children}\n    </>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n","import React from 'react';\nimport PropTypes from \"prop-types\";\n\nexport const Notification = ({ message, children }) => {\n  return (\n    <>\n      <h2>{message}</h2>\n      {children}\n    </>\n  );\n};\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};","import React, { useState } from 'react';\n\nimport { Statistics } from './Statistics/Statistics.jsx';\nimport { FeedbackOptions } from './FeedbackOptions/FeedbackOptions.jsx';\nimport { Section } from './Section/Section.jsx';\nimport { Notification } from './Notification/Notification.jsx';\n\nimport s from './Feedback.module.scss';\n\nexport default function Feedback() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const handleButton = e => {\n    const { target } = e; // сохраняем в переменную, если нужно при ассинхронном запросе достучаться до таргета (иначе null)\n\n    switch (target.dataset.name) {\n      case 'good':\n        setGood(prevState => prevState + 1);\n        break;\n      case 'neutral':\n        setNeutral(prevState => prevState + 1);\n        break;\n      case 'bad':\n        setBad(prevState => prevState + 1);\n        break;\n      default:\n        break;\n    }\n  };\n\n  function countTotalFeedback() {\n    return good + neutral + bad;\n  }\n\n  function countPositiveFeedbackPercentage() {\n    let percent = 0;\n    if (countTotalFeedback() !== 0) {\n      return (percent = Math.floor((good / countTotalFeedback()) * 100));\n    }\n    return percent;\n  }\n\n  return (\n    <div className={s.feedback}>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          options={{ good, neutral, bad }}\n          onLeaveFeedback={handleButton}\n        />\n      </Section>\n\n      <Section title=\"Statistics\">\n        {countTotalFeedback() !== 0 ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={countTotalFeedback()}\n            positivePercentage={countPositiveFeedbackPercentage()}\n          />\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </Section>\n    </div>\n  );\n}\n","import './App.css';\nimport Feedback from './component/Feedback/Feedback';\n\nexport default function App() {\n  return (\n    <>\n      <Feedback />\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics__value\":\"Statistics_statistics__value__1d4dW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedback__button\":\"FeedbackOptions_feedback__button__20ObN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedback\":\"Feedback_feedback__17gns\"};"],"sourceRoot":""}